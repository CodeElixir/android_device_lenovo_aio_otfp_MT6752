diff --git a/server/NatController.cpp b/server/NatController.cpp
index cda8f5f..501d8fc 100644
--- a/server/NatController.cpp
+++ b/server/NatController.cpp
@@ -375,12 +375,12 @@ int NatController::setForwardRules(bool add, const char *intIface, const char *e
         rc = -1;
         goto err_return;
     }
-
+#ifndef TARGET_DISABLE_IPV6_RPFILTER
     if (runCmd(ARRAY_SIZE(cmd4), cmd4) && add) {
         rc = -1;
         goto err_rpfilter;
     }
-
+#endif
     if (setTetherCountingRules(add, intIface, extIface) && add) {
         rc = -1;
         goto err_return;
diff --git a/server/SoftapController.cpp b/server/SoftapController.cpp
index 1c59ec3..8c4b671 100755
--- a/server/SoftapController.cpp
+++ b/server/SoftapController.cpp
@@ -41,6 +41,7 @@
 #include <private/android_filesystem_config.h>
 #include "wifi.h"
 #include "ResponseCode.h"
+#include "cutils/properties.h"
 
 #include "SoftapController.h"
 #include <dirent.h>
@@ -54,7 +55,7 @@ using android::base::WriteStringToFile;
 #endif
 
 #ifdef LIBWPA_CLIENT_EXISTS
-std:: string hostapd_unix_file(StringPrintf("/data/misc/wifi/hostapd/wlan0"));
+std:: string hostapd_unix_file(StringPrintf("/data/misc/wifi/hostapd/ap0"));
 static const char HOSTAPD_DHCP_DIR[]    = "/data/misc/dhcp";
 #endif
 static const char HOSTAPD_CONF_FILE[]    = "/data/misc/wifi/hostapd.conf";
@@ -251,7 +252,7 @@ int SoftapController::stopSoftap() {
 bool SoftapController::isSoftapStarted() {
     return (mPid != 0);
 }
-
+#define USE_MTK_WLAN   1
 /*
  * Arguments:
  *  argv[2] - wlan interface
@@ -265,6 +266,12 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
     int hidden = 0;
     int channel = AP_CHANNEL_DEFAULT;
 
+#ifdef USE_MTK_WLAN
+     char ap_channel[PROPERTY_VALUE_MAX] = {'\0'};
+     const char AP_CHANNEL_PROP_NAME[]="wifi.tethering.channel";
+     char mode;
+#endif
+
     if (argc < 5) {
         ALOGE("Softap set is missing arguments. Please use:");
         ALOGE("softap <wlan iface> <SSID> <hidden/broadcast> <channel> <wpa2?-psk|open> <passphrase>");
@@ -275,11 +282,30 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
         hidden = 1;
 
     if (argc >= 5) {
+    #ifndef USE_MTK_WLAN
         channel = atoi(argv[5]);
         if (channel <= 0)
             channel = AP_CHANNEL_DEFAULT;
+    #else
+         if (property_get(AP_CHANNEL_PROP_NAME, ap_channel, NULL)){
+             channel = atoi(ap_channel);
+         } else {
+             channel = atoi(argv[5]);
+         }
+ 
+         if (channel < 0) {
+             channel = AP_CHANNEL_DEFAULT;
+             mode = 'g';
+         } else if (channel >= 0 && channel <= 14) {
+             /* 2.4G channel, 0 will trigger MTK auto channel selection */
+             mode = 'g';
+         } else {
+             /* 5G channel */
+             mode = 'a';
+         }
+     #endif
     }
-
+#ifndef USE_MTK_WLAN
     std::string wbuf(StringPrintf("interface=%s\n"
             "driver=nl80211\n"
             "ctrl_interface=/data/misc/wifi/hostapd\n"
@@ -290,7 +316,37 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
             "ignore_broadcast_ssid=%d\n"
             "wowlan_triggers=any\n",
             argv[2], argv[3], channel, (channel <= 14) ? 'g' : 'a', hidden));
-
+#else
+ /*
+  * Arguments:
+  *  argv[2] - wlan interface
+  *  argv[3] - SSID
+  *  argv[4] - Broadcast/Hidden
+  *  argv[5] - Channel
+  *  argv[6] - Security
+  *  argv[7] - Key
+  *  argv[8] - Channel width
+  *  argv[9] - Max connection
+  */
+     std::string wbuf;
+     if (argc > 9) {
+         wbuf = StringPrintf("interface=%s\ndriver=nl80211\nctrl_interface="
+             "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=1\n"
+             "hw_mode=%c\nignore_broadcast_ssid=%d\nmax_num_sta=%d\n"
+             "eap_server=1\nwps_state=2\nconfig_methods=display physical_display push_button\n"
+             "device_name=AndroidAP\nmanufacturer=MediaTek Inc.\nmodel_name=MTK Wireless Model\n"
+             "model_number=66xx\nserial_number=1.0\ndevice_type=10-0050F204-5\nwowlan_triggers=disconnect\n",
+             "ap0", argv[3], channel, mode, hidden, atoi(argv[9]));
+     } else {
+         wbuf = StringPrintf("interface=%s\ndriver=nl80211\nctrl_interface="
+             "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=1\n"
+             "hw_mode=%c\nignore_broadcast_ssid=%d\n"
+             "eap_server=1\nwps_state=2\nconfig_methods=display physical_display push_button\n"
+             "device_name=AndroidAP\nmanufacturer=MediaTek Inc.\nmodel_name=MTK Wireless Model\n"
+             "model_number=66xx\nserial_number=1.0\ndevice_type=10-0050F204-5\nwowlan_triggers=disconnect\n",
+             "ap0", argv[3], channel, mode, hidden);
+     }
+ #endif
     std::string fbuf;
     if (argc > 7) {
         char psk_str[2*SHA256_DIGEST_LENGTH+1];
